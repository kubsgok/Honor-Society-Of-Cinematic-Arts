generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model users {
  id                    String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  full_name             String?
  email                 String?
  chapter_id            String?           @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  dob                   DateTime?         @db.Date
  created_at            DateTime          @default(now()) @db.Timestamptz(6)
  grad_month            month?
  grad_year             Decimal?          @db.Decimal
  user_type             user_type?        @default(Associate)
  rank                  rank?
  induction_status      induction_status?
  in_good_standing      Boolean           @default(true)
  points                Decimal           @default(0) @db.Decimal
  minutes_film_produced Float?            @default(0) @db.Real
}

enum induction_status {
  Met
  Not_Met   @map("Not Met")
  Overriden
  Revoked
}

enum month {
  January
  February
  March
  April
  May
  June
  July
  August
  September
  October
  November
  December
}

enum rank {
  Member
  Member_First_Class      @map("Member First Class")
  Member_Cum_Honore       @map("Member Cum Honore")
  Member_Magna_Honore     @map("Member Magna Honore")
  Member_Summa_Honore     @map("Member Summa Honore")
  Laureate_of_the_Society @map("Laureate of the Society")
}

enum user_type {
  Associate
  Nominee_for_Induction @map("Nominee for Induction")
  Member
  Officer
  Vice_President        @map("Vice President")
  President
  Chapter_Director      @map("Chapter Director")
  Alum
  Admin
}
